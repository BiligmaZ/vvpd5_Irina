def exp_series(x, n_terms=100):
    """
    Короткое описание:
    Вычисляет приближенное значение e^x с использованием ряда Тейлора.

    Подробное описание:
    Функция вычисляет значение экспоненты e^x, используя разложение в ряд Тейлора.
    Ряд Тейлора для функции e^x представляется как сумма бесконечного числа членов:
    e^x = ∑_(n=0)^∞ (x^n / n!).
    Для практических целей функция суммирует конечное количество членов ряда
    для получения приближенного значения.

    Аргументы:
    - x (float): Значение, для которого вычисляется e^x.
    - n_terms (int): Количество членов ряда для вычисления (по умолчанию 100).

    Возвращаемое значение:
    - float: Приближенное значение e^x.

    Исключения:
    - ValueError: Вызывается, если n_terms не является положительным целым числом.

    Примеры использования:
    --> exp_series(1.0)
    2.718281828459045
    --> exp_series(0.0)
    1.0
    --> exp_series(2.0, n_terms=50)
    7.3890560989306495
    """
    if not isinstance(n_terms, int) or n_terms <= 0:
        raise ValueError("Ошибка, число должно быть положительым и целым")

    result = 0.0
    factorial = 1  # Начальное значение 0! = 1

    for n in range(n_terms):
        if n > 0:
            factorial *= n  # Вычисляем n! в процессе
        result += (x ** n) / factorial  # Добавляем член ряда

    return result

def alternating_series(x, n_terms=100):
    """
    Короткое описание:
    Вычисляет сумму ряда с чередующимися знаками для заданного x и количества членов.

    Подробное описание:
    Функция вычисляет сумму ряда, заданного формулой:
    n(1+x) = x - x^2/2 + x^3/3 - x^4/4 + ... + (-1)^(n+1) * x^n / n
    для -1 < x ≤ 1. Функция суммирует конечное количество членов ряда для получения
    приближенного значения.

    Аргументы:
    - x (float): Значение, для которого вычисляется сумма ряда, должно быть в диапазоне (-1, 1].
    - n_terms (int): Количество членов ряда для вычисления (по умолчанию 100).

    Возвращаемое значение:
    - float: Приближенное значение суммы ряда.

    Исключения:
    - ValueError: Вызывается, если x не находится в диапазоне (-1, 1] или если n_terms не является положительным целым числом.

    Примеры использования:
    --> alternating_series(0.5)
    0.5
    --> alternating_series(1.0)
    0.6931471805599453
    --> alternating_series(-0.5, n_terms=50)
    -0.48121182505960347
    """
    if not (-1 < x <= 1):
        raise ValueError("Ошибка, x должно быть в диапазоне (-1, 1]")
    if not isinstance(n_terms, int) or n_terms <= 0:
        raise ValueError("Ошибка, исло должно быть положительным и целым")

    result = 0.0

    for n in range(1, n_terms + 1):
        term = ((-1) ** (n + 1)) * (x ** n) / n
        result += term

    return result